When I get directions to a location, I think twice and walk once. Last summer, I was in Barcelona, Spain, known for its grid-like streets with chamfered corners at intersections. Reaching Sagrada Família metro station was my goal, so I instinctively typed the station’s name into Google Maps. As I walked down a sidewalk surrounding one of the square blocks, my phone barked instructions every 100 meters: turn right, turn right, turn right. I realized I was back on the same street as I started, albeit 100 meters east. Why didn’t the map initially say to go 100 meters east? Is there such a thing as a one-way sidewalk? My suspicion was justified; the most straightforward path was as legal as optimal, and dozens of people were walking down it as I gawked under the scorching sun. This moment made me question the map application, but more importantly, it made me realize that my life is often in others’ hands. I would have spared myself 200 meters of walking if I had checked the map instructions. The preposterous path suggestion activated a part of my brain I wasn’t expecting to use on my vacation—my computer science brain. In particular, I suddenly thought of algorithms to find the shortest path in a graph.
The shortest route on an unweighted graph is easy to find. However, movement speed varies on different paths. What about my daily journey to school? The roads on this trip are riddled with traffic lights. I enjoy solving problems and wouldn’t let this one stop me from beating Google Maps’ “optimal” travel times. When I returned home, I stumbled upon Dijkstra’s algorithm, which finds the shortest path in a weighted graph. Traffic lights seemed to impose an upper asymptote on how quickly I could bike to school—could this algorithm allow me to arrive earlier? Could this abstract concept from graph theory solve a real-life problem? My interest was piqued. I was shocked by how similar a road system is to a weighted graph. I jumped up and ran to my bicycle to test a hypothesis. My regular route through city roads was short but packed with traffic lights; could the longer but traffic-light-free waterfront route be quicker? It sure could. I arrived 10 minutes earlier than what I believed was humanly possible.

Shortest-path algorithms allowed me to accomplish the “impossible,” which made me reevaluate how I process information. Now, I verify if the information given to me is valid, and I search for the most efficient ways to streamline my life. Why walk 300 meters in a loop if it’s the same as walking 100 meters east? This deviation from the social default reminded me that I have free will. I realized that my life is an optimal path problem waiting to be solved. But should everything in life be minimized? I wouldn’t always want to take the shortest path if it were the path of minimal enjoyment. While lying on my bed and pondering how to represent life as a graph, I imagined myself in Barcelona. I took a 200-meter detour, but had I not wandered onto the north side of the block, I would not have encountered the churro shop whose melted chocolate I fondly recall to this day. By maximizing distance, I inadvertently maximized enjoyment. I realized the fastest route isn’t always the most satisfying. The shortest path isn’t necessarily “shortest” physically—it varies depending on the situation. Getting to school? The shortest path is absolutely physical. Wandering around on vacation? The shortest path is the path to enjoyment.
From then on, I took control. Today, life no longer steers me to my future—I steer my life to the future. I decide what to maximize and minimize to attain my goals in the way that is most efficient and enjoyable.