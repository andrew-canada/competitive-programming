#include <bits/stdc++.h>
using namespace std;

inline void scan(int &x) {
    int c = getchar_unlocked(); x = 0;
    for(;c<48;c=getchar_unlocked());
    for(;c>47;c=getchar_unlocked())x=(x<<1)+(x<<3)+c-48;
}

const int MAXN = 1000002;
int adj[10000002][2], pre[MAXN];
bitset<MAXN> vis;

bool dfs(int node, int tgt){
    if(node == tgt) return true;
    for(int nx, cur = pre[node]; cur != -1; cur = adj[cur][1]){
        nx = adj[cur][0];
        if(vis[nx]) continue;
        vis[nx] = 1;
        if(dfs(nx, tgt)) return true;
    }
    return false;
}

bool check(int src, int tgt){
    vis.reset();
    return dfs(src, tgt);
}

int main(){

    int n, m, p, q, p1 = 0; scan(n); scan(m);

    memset(pre, -1, sizeof(pre));

    for(int src, i = 0; i < m; ++i){
        scan(src); scan(adj[p1][0]);
        adj[p1][1] = pre[src];
        pre[src] = p1++;
    }

    scan(p); scan(q);
    
    if(check(p, q)) printf("yes");
    else if(check(q, p)) printf("no");
    else printf("unknown");

    return 0;
}